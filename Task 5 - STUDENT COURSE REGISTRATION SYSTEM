import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

class Course {
    String code;
    String title;
    String description;
    int capacity;
    String schedule;
    ArrayList<String> registeredStudents;

    Course(String code, String title, String description, int capacity, String schedule) {
        this.code = code;
        this.title = title;
        this.description = description;
        this.capacity = capacity;
        this.schedule = schedule;
        this.registeredStudents = new ArrayList<>();
    }

    boolean isAvailable() {
        return registeredStudents.size() < capacity;
    }

    void registerStudent(String studentID) {
        if (isAvailable()) {
            registeredStudents.add(studentID);
        } else {
            System.out.println("Course is full!");
        }
    }

    void dropStudent(String studentID) {
        registeredStudents.remove(studentID);
    }

    void displayCourse() {
        System.out.println("Code: " + code + ", Title: " + title + ", Description: " + description + ", Capacity: " + capacity + ", Schedule: " + schedule + ", Slots Available: " + (capacity - registeredStudents.size()));
    }
}

class Student {
    String id;
    String name;
    ArrayList<String> registeredCourses;

    Student(String id, String name) {
        this.id = id;
        this.name = name;
        this.registeredCourses = new ArrayList<>();
    }

    void registerCourse(String courseCode) {
        registeredCourses.add(courseCode);
    }

    void dropCourse(String courseCode) {
        registeredCourses.remove(courseCode);
    }
}

public class CourseRegistrationSystem {
    static HashMap<String, Course> courses = new HashMap<>();
    static HashMap<String, Student> students = new HashMap<>();

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Adding some sample courses
        courses.put("CS101", new Course("CS101", "Intro to Computer Science", "Basics of CS", 30, "Mon-Wed 10:00-11:30"));
        courses.put("MATH123", new Course("MATH123", "Calculus I", "Introduction to Calculus", 25, "Tue-Thu 09:00-10:30"));

        // Adding some sample students
        students.put("S1001", new Student("S1001", "Alice"));
        students.put("S1002", new Student("S1002", "Bob"));

        while (true) {
            System.out.println("1. List Courses");
            System.out.println("2. Register for a Course");
            System.out.println("3. Drop a Course");
            System.out.println("4. Exit");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    listCourses();
                    break;
                case 2:
                    System.out.println("Enter Student ID:");
                    String studentID = scanner.next();
                    System.out.println("Enter Course Code:");
                    String courseCode = scanner.next();
                    registerCourse(studentID, courseCode);
                    break;
                case 3:
                    System.out.println("Enter Student ID:");
                    studentID = scanner.next();
                    System.out.println("Enter Course Code:");
                    courseCode = scanner.next();
                    dropCourse(studentID, courseCode);
                    break;
                case 4:
                    System.exit(0);
                default:
                    System.out.println("Invalid choice, please try again.");
            }
        }
    }

    static void listCourses() {
        for (Course course : courses.values()) {
            course.displayCourse();
        }
    }

    static void registerCourse(String studentID, String courseCode) {
        Student student = students.get(studentID);
        Course course = courses.get(courseCode);

        if (student != null && course != null && course.isAvailable()) {
            course.registerStudent(studentID);
            student.registerCourse(courseCode);
            System.out.println("Registered successfully!");
        } else {
            System.out.println("Error in registration.");
        }
    }

    static void dropCourse(String studentID, String courseCode) {
        Student student = students.get(studentID);
        Course course = courses.get(courseCode);

        if (student != null && course != null) {
            course.dropStudent(studentID);
            student.dropCourse(courseCode);
            System.out.println("Dropped successfully!");
        } else {
            System.out.println("Error in dropping the course.");
        }
    }
}
